{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "FarmCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "FarmSynced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "_address",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "_item",
						"type": "address"
					}
				],
				"name": "ItemCrafted",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "createMiningFarm",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getFarm",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum PixelMine.ORE",
								"name": "ore",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							}
						],
						"internalType": "struct PixelMine.MiningFarm[]",
						"name": "farm",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getFarmCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "getLand",
				"outputs": [
					{
						"components": [
							{
								"internalType": "enum PixelMine.ORE",
								"name": "ore",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							}
						],
						"internalType": "struct PixelMine.MiningFarm[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					}
				],
				"name": "getMarketPrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "conversion",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "isDrillholder",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_address",
						"type": "address"
					}
				],
				"name": "isHelmetholder",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "levelUp",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					}
				],
				"name": "mintNFT",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "myReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "receiveReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "enum PixelMine.Action",
								"name": "action",
								"type": "uint8"
							},
							{
								"internalType": "enum PixelMine.ORE",
								"name": "ore",
								"type": "uint8"
							},
							{
								"internalType": "uint256",
								"name": "landIndex",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							}
						],
						"internalType": "struct PixelMine.Event[]",
						"name": "_events",
						"type": "tuple[]"
					}
				],
				"name": "sync",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "enum PixelMine.ORE",
										"name": "ore",
										"type": "uint8"
									},
									{
										"internalType": "uint256",
										"name": "createdAt",
										"type": "uint256"
									}
								],
								"internalType": "struct PixelMine.MiningFarm[]",
								"name": "land",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "balance",
								"type": "uint256"
							}
						],
						"internalType": "struct PixelMine.Farm",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawBNBForProviders",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "withdrawBUSDForProviders",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"isHelmetholder(address)": {
					"params": {
						"_address": "The address to verify."
					},
					"returns": {
						"_0": "bool, uint256 Whether the address is a stakeholder, and if so its position in the stakeholders array."
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"isHelmetholder(address)": {
					"notice": "A method to check if an address is a stakeholder."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/PixelMine.sol": "PixelMine"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/PixelMine.sol": {
			"keccak256": "0xf0a91912d13b12a1dbd4c33867e5812ba8b9dcbbf19426c81af3695c98bcae89",
			"license": "MIT",
			"urls": [
				"bzz-raw://7a9ffb7f38eb8821902af61970108792d606a608c8ff9fa0c361b339f9657286",
				"dweb:/ipfs/QmZBCy9YqfYoe9phTJ9FUtTep9cJmi5bNV6QsNgbk3C8At"
			]
		}
	},
	"version": 1
}